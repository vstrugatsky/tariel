2022-Sep-17
Data model re-work - think deeply
- Exchanges load from ISO 10383

- Symbols with a uniqueness on Exchange + Company

2022-Sep-19
- convert data from symbols_polygon to symbols
- establish rules based on values - perhaps a separate exchange_acronyms contraption - because needed in code
- deprecate polygon symbols
- repoint dividends, splits, earnings_reports to new
- deprecate estimates

2022-Sep-26
- Setup Github repo - DONE

2022-Sep-27
- Remap exchanges, exchange acronyms, symbols to new tables
- adopted with session() mechanism for lookups
- Reloaded US and Canada symbols from EOD
- Loaded UK (XLON) symbols from EOD

2022-Sep-28
- Remapped and reloaded splits
- figured out how to define compound foreign keys
- figured out how to use joins
- figured out how to define a function args and return types in another function's signature - Callable
- wrote tests for Symbol.find_exchange_by_symbol_and_country

2022-Sep-29
- Remap and reload dividends
- create Polygon -> EOD symbol conversion
- allow for more than one symbol per country (as long as exchanges are different)
- refactor polygon load to make load_from_polygon less mysterious
- research failures to convert Polygon -> EOD: minor, not worth getting to perfection

2022-Oct-2:
- regularly run (a) symbols, (b) splits, (c) dividends (d) update to false SQL
- requests: configure timeouts
- deal with deactivated symbols (through UPDATED)

2022-Oct-3:
- Struggled to deal with deactivated symbols because of poor data quality from EOD (delisted tickers appeared as active)
- Introduced Jobs

2022-Oct-4:
- Started using Strategy pattern and isolate load jobs into separate classes - SUCCESS
- Changed approach to limit to US stocks and rely on Polygon
- Implemented LoadSymbolsFromPolygon
- redone table Symbols

2022-Oct-5,6,7:
- Added test to MarketIdentifiers
- Remodeled Symbols, Dividends to use integer primary and foreign keys and a unique key with delisted

2022-Oct-8:
- Implemented symbol locator logic in Dividends
- introduced pytest and the tests directory
- tests for symbol locator logic
- loaded dividends
- python object sort using lambda coolness

2022-Oct-9:
- Remodeled, implemented and loaded Splits
- Implement writing warning messages to DB indexed off jobs
- Jobs table: added limit to params
- Refactor all other model classes, esp. untangle EOD from Symbols
- Fixed important bug in Symbol.find_exchange_by_symbol_and_country
- SQL to delete duplicate rows in Job_Log

2022-Oct-10:
- Partially modeled EarningsReports
- Refactored twitter.py to conform to new design patterns
- Massive regex -> tested!

2022-Oct-11-12:
- support CAD
- wrote all transformations and tests
- saving works!
- fixed rounding issue

2022-Oct-13:
Tweets loading:
- Added support for NII
- Added support for basic guidance
- Added logging
- Added support and tests for canadian symbols in cashtags

2022-Oct-14:
Supported parsing of earnings from more than one Twitter account using Strategy pattern

2022-Oct-14:
Improved error logging
Added logging of additions, updates, errors and warnings

2020-Oct-16:
- externalize configuration
- parameterize to allow external running
- daily_jobs.sh
- consolidated_schema and reference data

2022-Oct-17:
- support priorities of Twitter providers (Livesquawk over Marketcurrents)
- support separate starting date for Twitter providers

2022-Oct-17-#2:
- roll out flake8 with .flake
- introduced separate regex parsing - more resilient!
- confirmed good operation of job_log!

2022-Oct-17#3:
- improved resiliency when no EPS or no Revenue - check that 3 reports from Livesquawk are now ok
- separated regex parsing for Marketcurrents and updated tests
- initial rudimentary parsing of guidance
- collected examples of sentiment analysis

2022-Oct-18:
- prototyped sending emails through gmail
- launchd working but mysteries remaining

2022-Oct-19:
- integrated email reporting
- stabilized launchd and the zsh script

2022-Oct-19#2:
- Major remapping of M:1 on Earnings:Symbols to M:M
- Supported multiple symbols per earnings tweet - this is sometimes the case with the ADR and Ordinary Share for the
   same company with multiple symbols
- Improved parsing of Livesquawk tweets

2022-Oct-20:
- refactoring to deal with circular import errors, the key is to import modules but to hold off with objects

2022-Oct-20#2:
- modeled Market Daily and developed/tested a Polygon loader

2022-Oct-21:
- still struggling with launchd job
- implemented loading of Market Daily for multiple days at a time
- fixed a problem where a tweet with one symbol in cashtag is followed by another for the same day and two cashtags
- improved Livesquawk parsing
- changed priority to Marketcurrents over Livesquawk
- improved resiliency of Polygon jobs

2022-Oct-24-26:
- loaded historical data
- figured launchd job
- analyzed sentiments
- reviewed errors, warnings and improved error detection / parsing as a result

2022-Oct-27:
- added data quality column
- dynamic regex parsing based on list of currencies/symbols
- improved testing!

2022-Oct-28-31:
- sentiment analysis design, tests construction, strategy determination

2022-Nov-1-2:
- sentiment tests, logic and model changes
- implemented calculation
- basic Marektcurrents and Livesquawk tests
- made use of Postgres and SQLAlchemy regular and JSON arrays

2022-Nov-3:
- major logic improvements to avoid wipe-outs and duplications
- major test suite buildout
- introduced fuzzywuzzy to deal with speculative multiple tickets such as ALK DAL SKYW

2022-Nov4-5:
Parsing improvements:
- $MCHP - Microchip stock gain on FQ2 earnings beat and guiding outlook above consensus (guiding outlook above)
- $DBRG - DigitalBridge stock dips as Q3 property, interest expenses climb
- $PRLB - Proto Labs stock sinks 24% to decade-low as guidance widely misses estimates
- $FRG - Franchise Group plummets 14% after missing Q3 bottom line
Added tests and fixed nasty bug with mins and maximums

2022-Nov-6:
- record in-line as 0 surprise
- numerous tests and parsing improvements

2022-Nov-7/8:
- more parsing improvements

2022-Nov-9:
- serious parsing improvements with the negative lookahead and numer of words intros

2022-Nov-13:
Parsing improvements:
- void false positive $BEAT
- support 'prices drop'
- support 'misses on top line'
- support 'smaller-than-expected' reversing meaning
- support NT$ currency
- support "outlook raised" as an indicator

2022-Nov-14:
Parsing improvements:
- FYnn outlook
- 2022 forecast
- full-year outlook
- record Q3 performance
- record revenue
- narrower loss
- FY2022 outlook
- Hungarian florins
- Q3 collab/licensing revenue
- Q4 guidance disappoints
- sees softness in bookings
- larger than expected loss
- narrow-than-expected Q3 loss
- mars Q3 results
- tops earnings expectation
- drives Q3 growth
- missing Q3 expectations
- slashing sales estimates

2022-Nov-14 #2 parsing improvements
- quarterly loss
- forecasts earnings below consensus
- wider-than-expected loss

2022-Nov-16 parsing improvements
- earnings improve
- guidance tops
- % growth
- first profit
- earnings disappoint
- weigh on results
- net income
- Q3 performance
- higher quarterly revenue
- better-than-expected Q3 earnings
- excess inventory
- after posting strong sales
- hurdles Q3 expectations
- lifting profit guidance
- as revenue decreases
- downbeat guidance

Mis-characterized as earnings: $SI - Silvergate Capital stock slides as Morgan Stanley slashes 2023 EPS estimate by 51%
Mis-characterized as earnings: $PVBC $BTC-USD - Provident Bancorp stock plunges as it estimates Q3 loss sparked by crypto slump


Next steps:
- cont. review before 2022-11-11 16:19
- build fin data (industry, EPS, beta, earnings)


